#!/usr/sh
#
# makefile for pmd and utility programs related to pmd
#

#-----------------------------------------------------------------------
# to be generated by configure script
#-----------------------------------------------------------------------
CPP= @CPP@
CPPFLAGS= @CPPFLAGS@
#CPPFLAGS= -D__SHEAR__ -D__DISL__ -D__WALL__ -D__3body__
MPIFC= @FC@
MPIFLAGS= @FCFLAGS@ -fPIC
#-----------------------------------------------------------------------
# suffixes
.SUFFIXES: .o .f .F .f90 .F90 .mod
%.o : %.F
	${MPIFC} -c ${MPIFLAGS} ${CPPFLAGS} -o $@ $<
%.o : %.F90
	${MPIFC} -c ${MPIFLAGS} ${CPPFLAGS} -o $@ $<
%.mod : %.F90 %.o
	@true

ifndef VERBOSE
MAKEFLAGS += --no-print-directory
endif

pmd= read_input.o pmd_main.o
pmdobj= util_vec.o util_rnd.o lasubs.o common_parallel.o sort.o pmd_core.o 
pmc= prec_mc.o util_rnd.o read_input.o pmd_core.o util_vec.o \
	lasubs.o common_parallel.o sort.o
comb= node_conv.o util_vec.o

mods= mod_pmdvars.o mod_pmdio.o mod_pmdmpi.o zload.o mod_version.o mod_force.o \
	mod_ttm.o descriptor.o metadynamics.o mod_constraints.o mod_vector.o \
	mod_rdcfrc.o mod_structure.o mod_deform.o mod_util.o mod_element.o \
	mod_extforce.o mod_colorcharge.o mod_localflux.o mod_pdens.o mod_time.o \
	mod_pairlist.o
args= iargc.o getarg.o

force_common= force_common.o

forces= force_Ramas_FeH.o force_RK_FeH.o force_RK_WHe.o \
	force_Ito3_WHe.o force_LJ.o force_SW.o force_EDIP_Si.o \
	force_Brenner.o force_Lu_WHe.o force_Branicio_AlN.o \
	force_Mishin.o force_AFS_W.o force_SC_Fe.o \
	force_SM_Al.o force_linreg.o force_DNN.o \
	force_Morse.o force_Coulomb.o force_EAM.o force_Buckingham.o \
	force_Bonny_WRe.o force_ZBL.o force_cspline.o force_Tersoff.o \
	force_Abell.o force_BMH.o force_dipole.o force_fpc.o force_angular.o ${force_common}
params=params_Ramas_FeH.h params_RK_FeH.h params_RK_WHe.h params_Ito3_WHe.h \
	params_EDIP_Si.h \
	params_Brenner.h params_Lu_WHe.h params_Branicio_AlN.h \
	params_Mishin_Al.h params_Mishin_Ni.h params_AFS_W.h params_SC_Fe.h \
	params_SM_Al.h const.h

libpmdobj= ${pmdobj} ${mods} ${forces} ${params}

clstr= mod_pmdio.o mod_util.o util_vec.o mod_pairlist.o cluster.o

ascii2bin= mod_pmdio.o util_vec.o mod_util.o ascii2bin_pmd.o
bin2ascii= mod_pmdio.o util_vec.o mod_util.o bin2ascii_pmd.o

rdfobj= mod_pmdio.o mod_util.o util_vec.o mod_pairlist.o mod_time.o rdf.o

#-----------------------------------------------------------------------
# Post process programs
#

#-----------------------------------------------------------------------
# Make rule entries
#
.PHONY: pmd lib clean

all: pmd lib

clean:
	rm -f *.o *.mod *.a *~

pmd: ${mods} ${pmd} ${pmdobj} ${forces}
	${MPIFC} ${MPIFLAGS} -o $@ $^

lib: ${libpmdobj}
	ar rcs $@pmd.a $^

pmd_examples := ../examples/pmd_*/
define cd_test
	(cd $(dir ${1}) && make test)

endef

test: pmd
	@$(foreach x,$(wildcard $(pmd_examples)),$(call cd_test, ${x}))

pmc: ${mods} ${pmc} ${forces}
	${MPIFC} ${MPIFLAGS} -o $@ ${mods} ${forces} ${pmc}

# smd: ${mods} ${smd} ${forces} ${params}
#   ${MPIFC} ${MPIFLAGS} -o $@ ${mods} ${forces} ${smd}

voids: ${voids} ${args}
	${MPIFC} ${MPIFLAGS} -o $@ ${voids} ${args}

cna2disl: cna2disl.o
	${MPIFC} ${MPIFLAGS} -o $@ cna2disl.o

rdpmd: read_pmd.o ${mods}
	${MPIFC} ${MPIFLAGS} -o $@ read_pmd.o ${mods}

cluster: ${clstr}
	${MPIFC} ${MPIFLAGS} -o $@ ${clstr}

a2b: ${ascii2bin}
	${MPIFC} ${MPIFLAGS} -o $@ ${ascii2bin}

b2a: ${bin2ascii}
	${MPIFC} ${MPIFLAGS} -o $@ ${bin2ascii}

rdf: ${rdfobj}
	${MPIFC} ${MPIFLAGS} -o $@ ${rdfobj}

#.....Dependencies
pmd_main.o: ${mods}
pmd_core.o: ${mods} ${forces} ${force_common}
read_input.o:  ${mods} ${force_common}
node_conv.o:   ${mods}
pmd2akr.o: ${mods}
put_interstitials.o: ${mods}
force_common.o: ${forces}
force_Ito_W-He.o: ${mods}
force_Ramas_FeH.o: params_Ramas_FeH.h
force_RK_FeH.o: params_RK_FeH.h
force_RK_WHe.o: params_RK_WHe.h
force_Ito3_WHe.o: params_Ito3_WHe.h
force_EDIP_Si.o: params_EDIP_Si.h
force_Brenner.o: params_Brenner.h
force_Lu_WHe.o: params_Lu_WHe.h
force_Branicio_AlN.o: params_Branicio_AlN.h
force_Mishin.o: params_Mishin_Al.h params_Mishin_Ni.h
force_Coulomb.o: mod_util.o
force_LJ.o: mod_util.o
force_DNN.o: mod_util.o
force_SW.o: mod_util.o
force_ZBL.o: mod_util.o mod_element.o
force_cspline.o: mod_util.o
force_Tersoff.o: mod_vector.o
force_dipole.o: mod_util.o
force_BMH.o: ${mods}
force_Abell.o: ${mods}
force_fpc.o: ${mods}
force_Morse.o: ${mods} force_Coulomb.o
force_angular.o: ${mods}
mod_constraints.o: mod_vector.o mod_util.o
mod_rdcfrc.o: mod_structure.o mod_util.o
mod_ttm.o: mod_pmdvars.o mod_util.o
mod_pmdio.o: mod_pmdvars.o mod_util.o mod_time.o mod_vector.o
mod_pairlist.o: mod_time.o
mod_util.o: mod_pmdvars.o mod_vector.o

# descriptor.o descriptor.mod : descriptor.F90 force_ZBL.o mod_util.o
# 	$(MPIFC) -c $(MPIFLAGS) $(CPPFLAGS) $<

# zload.o zload.mod : zload.F90
# 	$(MPIFC) -c $(MPIFLAGS) $(CPPFLAGS) $<

# metadynamics.o metadynamics.mod : metadynamics.F90 mod_util.o
# 	$(MPIFC) -c $(MPIFLAGS) $(CPPFLAGS) $<
